"use strict";
var __moduleName = "Geolocation";
var DemoExample = require('demoexample').DemoExample;
var DEMO_GROUP = 'webapi';
var DEMO_TITLE = 'Geolocation';
var GeolocationDemo = function GeolocationDemo(app) {
  this.app = app;
  this.group = DEMO_GROUP;
  this.title = DEMO_TITLE;
  this.app.addDemo(this);
};
var $GeolocationDemo = GeolocationDemo;
($traceurRuntime.createClass)(GeolocationDemo, {
  render: function(element) {
    var $__0 = this;
    $traceurRuntime.superCall(this, $GeolocationDemo.prototype, "render", [element]);
    this.addText("Geolocation example...");
    this.addText("Based on the [MDN](https://developer.mozilla.org/en-US/docs/WebAPI/Using_geolocation) geolocation-tutorial...");
    this.addText("...");
    this.addDemo("// Get GPS cordinates via a Promise\r\nfunction getGPSCoords () {\r\n\t// Create new Promise to help out in fetching the geolocation data asynchronously\r\n\treturn new Promise( (resolve,reject) => { \r\n\r\n\t\t// Call the geolocation API\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t// Success callback -> promise resolves to geolocation position\r\n\t\t\t(pos) => resolve( [ pos.coords.latitude , pos.coords.longitude ] ),\r\n\r\n\t\t\t// Failure callback -> promise rejects with an error message\r\n\t\t\t()    => reject(new Error('Failed do retrieve your geolocation position.'))\r\n\t\t);\r\n\t});\r\n}", "javascript");
    this.addText("Let's see, how to use that!");
    this.addDemoCode("// Fetch GPS coordinates\r\nlet Coords = getGPSCoords();\r\n\r\n// If/when location information is retrieved, update the UI\r\nCoords.then(\r\n\t(coords) => {\r\n\t\tlet [lat,lon] = coords;\r\n\t\tconsole.log('Lat: '+lat+'째, Lon: '+lon+'째');\r\n\t}\r\n\r\n// ...or show an error message, if retrieving the GPS coordinates failed\r\n).catch(\r\n\t(e) => alert(e)\r\n);", (function(console) {
      return $__0.logLocation(console);
    }));
    this.addText("Let's try something more interesting/useful!  \r\nUsing the [Google Static Maps API](http://) we will show the location on a\r\nstatic image map:");
    this.addDemoCode("// Fetch GPS coordinates\r\n// If/when location information is retrieved, show them on map!\r\nCoords.then(\r\n\t(coords) => {\r\n\t\tlet [lat,lon] = coords;\r\n\t\tlet i = new Image();\r\n\t\ti.src = \"http://maps.googleapis.com/maps/api/staticmap?key=AIzaSyD8QtSJG6rFsoKXH16E6QR2k_4-QBr3gdI&size=320x240&scale=2&maptype=roadmap&center=$LAT$,$LON$&zoom=12&markers=color:blue%7Clabel:%7C$LAT$,$LON$\"\r\n\t\t\t.replace('$LAT$',lat)\r\n\t\t\t.replace('$LON$',lon);\r\n\r\n\t\tdocument.body.appendChild(i);\r\n\t}\r\n);", (function(console) {
      return $__0.showLocation(console);
    }));
  },
  getGPSCoords: function() {
    return new Promise((function(resolve, reject) {
      navigator.geolocation.getCurrentPosition((function(pos) {
        return resolve([pos.coords.latitude, pos.coords.longitude]);
      }), (function() {
        return reject(new Error('Failed do retrieve your geolocation position.'));
      }));
    }));
  },
  logLocation: function() {
    var console = arguments[0] !== (void 0) ? arguments[0] : window.console;
    var Coords = this.getGPSCoords();
    Coords.then((function(coords) {
      var $__2 = coords,
          lat = $__2[0],
          lon = $__2[1];
      console.log('Lat: ' + lat + '째, Lon: ' + lon + '째');
    })).catch((function(e) {
      return alert(e);
    }));
  },
  showLocation: function() {
    var console = arguments[0] !== (void 0) ? arguments[0] : window.console;
    var Coords = this.getGPSCoords();
    Coords.then((function(coords) {
      var $__2 = coords,
          lat = $__2[0],
          lon = $__2[1];
      var i = new Image();
      i.src = "http://maps.googleapis.com/maps/api/staticmap?key=AIzaSyD8QtSJG6rFsoKXH16E6QR2k_4-QBr3gdI&size=320x240&scale=2&maptype=roadmap&center=$LAT$,$LON$&zoom=12&markers=color:blue%7Clabel:%7C$LAT$,$LON$".replace('$LAT$', lat).replace('$LON$', lon);
      console.log(i);
    })).catch((function(e) {
      return alert(e);
    }));
  },
  activate: function() {},
  reset: function() {}
}, {}, DemoExample);
function example(Demo) {
  return new GeolocationDemo(Demo);
}
module.exports = {
  get example() {
    return example;
  },
  __esModule: true
};
